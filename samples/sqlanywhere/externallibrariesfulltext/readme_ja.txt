// ***************************************************************************
// Copyright (c) 2013 SAP AG or an SAP affiliate company. All rights reserved.
// ***************************************************************************
// サンプルコードは「現状有姿(as is)」の条件で提供されるものであり、
// お客様に対しいかなる保証責任も賠償責任も負わないものとします。
//
// お客様は、当該サンプルコードを使用、複製および配布することができます。
// ただし、アイエニウェアの原コードに関する著作権表示およびにこれに対する
// 免責表示をすることを条件とします。
// 
// *********************************************************************

		    外部ライブラリを使用した全文検索

目的
----

このディレクトリには、ALTER TEXT CONFIGURATION 文を使用することで指定される 
SQL Anywhere データベースサーバーで呼ぶことができるDLLで定義された外部プレ
フィルターと単語区切りサンプルライブラリを含んでいます。

DLL のソースコードは pf_sample.cpp、tb_sample.cpp および ifilterprefilter.cpp
ファイルに含まれています。

pf_sample ライブラリはドキュメントに示されたワークフローに従うシンプル
で基本的なプレフィルターライブラリを提示します。pf_sample ライブラリが
提供するプレフィルターは、'<' や '>' で示されたタグを含むドキュメント
(例えば、xml や html ドキュメント) を受け入れます。プレフィルターはタグを
取り除き、呼び出し元に残ったデータを返します。

ifilterprefilter ライブラリはより複雑なプレフィルターライブラリです。
このライブラリは、PDF、Word または Excel ファイルのようなドキュメント
からテキストを抽出するために IFilter インターフェースを使用します。こ
のライブラリは、get_next_piece の最初の呼び出しで、そのプロデューサー
のすべてのドキュメントデータを使用します。フィルターされたデータが返さ
れる前に、IFilter インターフェースが完全なドキュメントを要求するために
この動作は要求されます。
一般的に、Microsoft Office がコンピューターにインストールされた場合、
XML やドキュメントと同様に、Microsoft Office も IFilter を利用できます。
さらに、Adobe Acrobat Reader がインストールされている場合、PDF ドキュ
メントの IFilter も利用できます。ifilterprefilter ライブラリは、データ
ベースサーバーが実行中のコンピューターで有効な IFilter を使用します。
追加されたドキュメントタイプのIFilter ライブラリ、または PDFドキュメン
トの異なる IFilter ライブラリはサードパーティベンダーから入手できます。

tb_sample ライブラリは、単語区切りライブラリです。組み込みSQL Anywhere
GENERIC 単語区切りとの違いは２つあります。
1) アポストロフィは単語区切りとしてではなく、文字の一部として扱われます。
2) すべての文字は小文字に変換されるため、大文字と小文字を区別するデー
   タベースで大文字と小文字を区別しない検索を実行できます。

必要条件
--------
各サンプルライブラリは、環境変数 SQLANY16 にSQL Anywhere インストール
ディレクトリが設定されていることを想定しています。この環境変数は SQL 
Anywhere のインストール時に設定されます。

Windows の場合、さらに以下も前提としています。
 - makefile を使用するために、Visual Studio .NET 2003 または 
   それ以降 がインストール済みである。
 - 環境変数 VCINSTALLDIR が設定済みである。これは、Visual Studio の
   インストール時に設定されますが、Visual Studio によってインストール
   される vcvars32.bat ファイルを使用して設定することもできます。

pf_sample と tb_sample のソースコードは、他のコンパイラでもコンパイル
できます。

pf_sammple と tb_samle の UNIX 専用のビルド手順については、build.sh 
ファイルを参照してください。

キーワードや全文クエリについての詳細はドキュメントの「CONTAINS 探索条件」
を参照して下さい。

セットアップ手順
----------------
Windows の場合:
1.  build.bat を実行し、DLL をコンパイルします。IFilter サンプルは
    Windows でのみコンパイルでき、Visual Studio コンパイラーを必要とし
    ます。
2.  show_exports.bat を実行し、すべてのライブラリの抽出記号を表示しま
    す。
3.  環境変数 PATH にあるディレクトリに DLL をコピーします。

UNIX の場合:
1.  build.sh を実行し、共有オブジェクトをコンパイルします。IFilter サ
    ンプルは UNIX 上ではコンパイルできないため、UNIX サンプルには含ま
    れません。
2.  show_exports.sh を実行し、すべてのライブラリの抽出記号を表示しま
    す。
3.  ライブラリパスにあるディレクトリに共有オブジェクトをコピーします。

両方のプラットフォームで:
1.  データベースサーバーを起動します。
2.  DBISQL を起動し、データベースに接続します。

処理手順
---------
プレフィルターサンプル:pf_sample.dll の簡単なテスト：
    DBISQLで、テスト用のテーブル、テキスト設定およびテキストインデック
    スを定義するために、次のコマンドを実行します。
	read pf_sample.sql

    DBISQLで、次のコマンドを実行し、テーブルの追加と問い合わせをします。
	read pf_sample_tests.sql
    結果は、「結果」ウィンドウに表示されます。INSERT が成功する前に、
    サーバーから INSERT の実行に失敗したというエラーメッセージも受け取
    ります。メッセージウィンドウのメッセージを参照して下さい。

    サンプル内で使用される全文クエリは、１つの単語（'body' または 'page'）
    を検索します。プレフィルターを使用しなかった場合、'body' は挿入さ
    れた html ドキュメントで見つかり、'page' は挿入された xml ドキュメ
    ントで見つかります。これらの単語はタグではなく、ドキュメントの実際
    のテキスト内にある場合に見つかります。
    
プレフィルターサンプル:IFilter のテスト（Windows のみ）:
    DBISQLで、次のコマンドを実行し、テスト用のユーザー、テーブル、テキ
    スト設定およびテキストインデックスを定義します。
	read ifilter_pf.sql

    DBISQLで、次のコマンドを実行し、テーブルの追加と問い合わせをします。
	read ifilter_pf_tests.sql
    このサンプルのクエリー例は、単語として扱わないフレーズ検索とキー
    ワードとして扱わない AND 検索での異なる動作を示します。

    ドキュメントの拡張子が同じでない場合、またはドキュメントが無効の場
    合、このプレフィルターはエラーを返しません。エラーの多くは、プレフィ
    ルターライブラリはドキュメントの問題部分をスキップします。

単語区切りサンプルの簡単なテスト：
    DBISQLで次のコマンドを実行し、テーブル、テキスト設定およびテキスト
    インデックスを定義します。
	read tb_sample.sql
    
    DBISQLで次のコマンドを実行し、テーブルの追加と問い合わせをします。
	read tb_sample_tests.sql
    サンプルを使用した全文クエリは以下を検索します。
    - 単語 'p* - アポストロフィで始まり、次に p が続く単語。
      SQL Anywhere サーバーの GENERIC 組み込み単語区切りが使用される場
      合、アポストロフィは単語の一部とならないため、p で始まる単語はど
      れでも一致します。さらに、大文字小文字を区別するデータベースでは、
      このクエリには小文字 p があるので、検索している実際の単語('P') 
      には一致しません。
      サンプルの単語区切りでは、クエリに一致するドキュメントは 'P' を
      含むドキュメントだけです。
    - 単語 mary's
      上記のように、このクエリは要求されたドキュメントを見つけるために
      単語を小文字に変換します。アポストロフィが単語に含まれない場合、
      このクエリは 'Mary s ' で始まるドキュメントに一致します。

clean.bat を実行すると、生成されたすべてのファイルが削除されます。
